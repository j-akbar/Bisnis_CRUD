{
    "swagger": "2.0",
    "info": {
        "description": "This is a simple example NodeJS, MySql API project to demonstrate Swagger Documentation",
        "version": "1.0.0",
        "title": "Business API",
        "contact": {
            "email": "jadiakbar@gmail.com"
        },
        "license": {
            "name": "J. Akbar",
            "url": "www.linkedin.com/in/j-akbar-1b749455"
        }
    },
    "schemes": ["http"],
    "host": "localhost:5000",
    "basePath": "/api/v1",
    "paths" : {
        "/products" : {
            "get" : {
                "summary" : "Get all the products",
                "description": "Get all the products",
                "produces": ["application/json"],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/todosResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    }
                }
            }
        },
        "/products" : {
            "post" : {
                "summary" : "Save the product",
                "description": "Save the product",
                "produces": ["application/json"],
                "consumes": ["application/json"],
                "parameters": {
                    "product_name": "Asuransi Mikro KKM",
                    "premium": "50000"
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/todosResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    }
                }
            }
        },
        "/products/{id}" : {
            "put" : {
                "summary" : "Update the product",
                "description": "Update the product",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "product id that needs to be deleted",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "task object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "task" : {
                                    "type": "object",
                                    "$ref": "#/definitions/Task"
                                } 
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/todosResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    }
                }
            }
        },
        "/products/{id}" : {
            "delete" : {
                "summary" : "Delete the product",
                "description": "Delete the product",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "product id that needs to be deleted",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/todosResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    }
                }
            }
        }
    }, 
    "definitions": {
        "todosResponse": {
            "type": "object",
            "properties": {
                "id": {
                     "type": "integer"
                },
                "task": {
                    "type": "string"
                },
                "assignee": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "Task": {
            "type": "object",
            "properties": {
                "task": {
                    "type": "string"
                },
                "assignee": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "InvalidResponse": {
            "type": "object",
            "properties": {
                "ResponseCode": {
                    "type": "string"
                },
                "ResponseDesc": {
                    "type": "string"
                }
            }

        }
    }
}